body {
	font-family: monospace;
	padding: 0;
	margin: 0;
	overflow: hidden;
	overflow: clip;
}
noscript {
	position: absolute;
	z-index: 9999999;
	color: white;
	background-color: black;
	height: 100vh;
	width: 100vw;
	font-size: min(100vh, calc(100vw / 30));
	line-height: 100vh;
	text-align: center;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	inset: 0;
}

#fpscountercontainer
{
	z-index: 10000;
	position: absolute;
	top: 1lh;
	left: var(--infobox-width);
	background-color: var(--debuginfobgcolor);
	.fpscounter {
		fill: white;
		white-space: pre;
		dominant-baseline: hanging;
	}
	.fpschart {
		stroke: blue;
		stroke-width: 1;
		opacity: 0.9;
		fill: none;
	}
	.fpschartavg {
		stroke: red;
		stroke-width: 1;
		opacity: 0.3;
		fill: none;
	}
}

:root {
	--searchbox-inputheight: 2lh;
	--closebutton-padding: 1ex;
	--closebutton-font-scale: 1.2;
	--closebutton-size: calc(calc(1lh + 2 * var(--closebutton-padding)) * var(--closebutton-font-scale));
	--outlinesize-hover-scale: 2.5;
	--debuginfobgcolor: #111C;
	--boxbgcolor: #000E;
	--infobox-width: 20em;
	--viewsourcebox-width: 40ch;
}

#mapcontainer {
	transform-style: flat;
	overflow: hidden;
	overflow: clip;
	background-color: black;
	color: white;
	height: 100vh;
	width: 100vw;
	position: absolute;
	top: 0;
	left: 0;
	cursor: grab;
	user-select: none;
	
	& table, thead, tbody, tfoot, tr, th, td {
		border-color: white;
		padding-inline: 0.25em;
	}
	
	--shortcutlinkhue: 0deg;
}
#mapcontainer>*{
	position: absolute;
	cursor: auto;
	user-select: text;
}
#mapnodepanbox{
	transform-style: flat;
	cursor: grab;
	pointer-events: none;
	background: none;
}
#mapnodepanbox *{
	/* TODO fix transitions? */
	/*transition-property: translate, scale;
	transition-duration: 0.2s;
	transition-timing-function: linear;*/
	-webkit-user-select: none;
	user-select: none;
	backface-visibility: visible;
}

#mapnodes, #maplinks {
	translate: 50vw 50vh;
	height: 100vh;
	width: 100vw;
	transform-style: preserve-3d;
	transform-origin: top left;
	pointer-events: none;
	background: none;
	z-index: 10;
	position: absolute;
	top: 0;
	left: 0;
}
.mapnode {
	transform-style: flat;
	background-color: black;
	color: white;
	word-wrap: anywhere;
	position: absolute;
	top: 0;
	left: 0;
	transform-origin: center center;
	outline: var(--outlinesize) solid white;
	pointer-events: auto;
	pointer-events: all;
	cursor: pointer;
}
@keyframes waves{
	from {
		outline-style: solid;
		outline-width: calc(calc(var(--outlinesize-hover) + var(--outlinesize)) / 2);
	}
	to {
		outline-style: double;
		outline-width: calc(calc(var(--outlinesize-hover) + var(--outlinesize)) * 1.5);
	}
}
.nodebox.selected .mapnode{
	outline: calc(calc(var(--outlinesize-hover) + var(--outlinesize)) / 2) solid white;
	outline-width: calc(calc(var(--outlinesize-hover) * 0.6 + var(--outlinesize) * 0.4) * 1.5);
	outline-style: solid;
}
.animations {
	& .nodebox.selected .mapnode, .mapnode:focus{
		/*animation: 1s ease-in-out 0s alternate infinite waves;*/
		animation: 1s ease-in 0s infinite waves;
	}
}
.mapnode:hover {
	outline: var(--outlinesize-hover) solid gold;
}
.nodebox.highlighted {
	outline: calc(var(--outlinesize-hover) + var(--outlinesize)) solid highlight;
}
.nodebox {
	transform-style: flat;
	position: absolute;
	height: 50px;
	width: 50px;
	overflow: visible;
	font-size: 15px;
	--outlinesize-hover: calc(var(--outlinesize) * var(--outlinesize-hover-scale));
}
#nodeinfobox {
	white-space: pre;
	z-index: 1000;
	background-color: var(--boxbgcolor);
	color: white;
	height: 100%;
	overflow: scroll;
	width: var(--infobox-width);
	font-size: 1em;
	/*top: 1lh;*/
	left: 0;
}
.closebutton {
	--closebutton-basecolor: red;
	font-size: calc(var(--closebutton-font-scale) * 1em);
	font-weight: bold;
	padding: var(--closebutton-padding);
	display: inline-block;
	color: white;
	text-decoration: none;
	/* border: 1px solid red;*/
	width: 1lh;
	text-align: center;
	background-color: color-mix(in srgb, var(--closebutton-basecolor), transparent 33.5%);
	opacity: 0.9;
	position: fixed;
	z-index: inherit;
}
.closebutton:hover {
	background-color: color-mix(in srgb, var(--closebutton-basecolor), transparent 13.5%);
}
.closebutton:active {
	background-color: color-mix(in srgb, color-mix(in srgb, var(--closebutton-basecolor), white 20%), transparent 13.5%);
}
.closebutton+* {
	padding-block-start: var(--closebutton-size);
}
.resultsboxlabel {
	padding-inline-start: calc(var(--closebutton-size) + 1ex);
	position: absolute;
}
#searchinputbox {
	line-height: var(--searchbox-inputheight);
	padding-inline: 3ex;
	background-color: #111C;
}
#searchbox {
	z-index: 99999;
	height: var(--searchbox-inputheight);
	.searchresults {
		white-space: pre-wrap;
		max-width: calc(100dvw - var(--infobox-width) - var(--viewsourcebox-width));
		width: max-content;
		width: 30em;
		overflow: auto;
		max-height: calc(100dvh - var(--searchbox-inputheight));
		background-color: var(--boxbgcolor);
		a {
			text-decoration: none;
			color: white;
		}
	}
}
.hidden {
	display: none !important;
	visibility: hidden !important;
}
#maplegend {
	z-index: 100;
	background-color: var(--boxbgcolor);
	color: white;
	bottom: 0;
	left: 0;
	border: 1px solid white;
	padding: 2px;
}
#mapcontainer hr {
	border: 1px solid white;
}
#mapdebuginfo {
	z-index: 10000;
	background-color: var(--debuginfobgcolor);
	color: white;
	left: 0;
	right: 40ch;
	right: calc(36ch + 2ex + 10px);
	right: calc(36ch + 2ex + 6px + 2ch);
	top: var(--searchbox-inputheight);
}
@media (min-width: 1000px) {
	#mapdebuginfo, #maplegend, #searchbox {
		left: var(--infobox-width);
	}
}

#mapdebuginfo:has(~#mapsettings.collapsed){
	right: 4ex;
	right: 2lh;
	right: calc(1lh + 2ex + 2px);
}
#mapdebuginfo:has(~#nodeinfobox.hidden){
	left: 0;
}
#nodeinfobox.hidden~#maplegend, #nodeinfobox.hidden~#searchbox{
	left: 0;
}
#maplinks {
	z-index: 1 !important;
}
#mapsettings {
	z-index: 100000;
	top: 0;
	right: 0;
	text-align: center;
	background-color: var(--boxbgcolor);
	padding: 1ex;
	border: 1px solid white;
	max-height: calc(100% - 3lh - 2ex - 2px);
	overflow: scroll;
	overflow: auto;
}
#mapsettings input {
	max-width: 19ch;
	padding-block: 1px;
	padding-inline: 2px;
	font-family: inherit;
	/*border-width: 2px;
	border-radius: 2px;*/
	margin: 0;
}
#mapsettings.collapsed {
	height: 3ex;
	height: 1lh;
	width: 3ex;
	width: 1lh;
	overflow: hidden;
	overflow: clip;
}
.maplink {
	position: absolute;
	top: 0;
	left: 0;
	transform-style: preserve-3d;
}
.nomousebuttons .maplink{
	pointer-events: all;
	cursor: crosshair;
}
.maplink *{
	background-color: #7777;
	/*Note: links are semitransparent so you can see other links crossing and layered
			beneath the above links, and the opacity property doesn't do this*/
	position: absolute;
	top: 0;
	left: 0;
	transform-style: preserve-3d;
}
.mapnodeiconcontainer {
	position: absolute;
	top: 0;
	left: 50px;
	transform-origin: top left;
	image-rendering: pixelated;
	image-rendering: crisp-edges;
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	line-height: 1;
	/* TODO ensure icons meet WCAG standards for color contrast; */
}
.nodeicon {
	display: block;
	height: 1lh;
	width: 1lh;
}
.maplink.selected * {
	background-color: white;
}
.maplink.mapshortcutlink * {
	background-color: hsla(var(--shortcutlinkhue), 100%, 30%, 45%);
}
.maplink.mapshortcutlink.selected * {
	background-color: hsla(var(--shortcutlinkhue), 100%, 50%, 100%);
}

#panrotationtogglebox {
	position: absolute;
	bottom: 0;
	right: 0;
	color: white;
	background-color: (--boxbgcolor);
	border: 1px solid white;
	border-radius: 4px;
	line-height: 1;
	z-index: 100;
	text-align: right;
	height: 48px;
	width: 48px;
	top: -60px;
	margin: 0;
	padding: 2px;
	overflow: hidden;
	overflow: clip;
	* {
		padding: 0;
		margin: 0;
		height: inherit;
		width: inherit;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		transition-property: transform, transform-origin, z-index, opacity, font-weight;
		transition-duration: 0.1s;
		transition-timing-function: linear;
		color: #DDD;
	}
	.panrotationtogglebutton {
		margin: 1px;
		padding: 0;
		border: 1px solid currentColor;
		border-radius: 2px;
	}
	/* .panrotationtogglebutton>* {
		background-color: color-mix(in srgb, currentColor 35%, transparent);
	}*/
	.panrotationtogglebutton svg * {
		color: inherit;
		mix-blend-mode: difference;
		font-size: 12px;
	}
	.panrotationtogglebutton:hover:not([data-option]) .panrotationtogglebutton-pan,
	.panrotationtogglebutton:hover[data-option="pan-rotate"] .panrotationtogglebutton-pan,
	.panrotationtogglebutton:hover[data-option="rotate-pan"] .panrotationtogglebutton-rotate {
		transform: scale(0.85) translate(-1.2px, -1.2px);
		color: white;
	}
	.panrotationtogglebutton:not([data-option]) .panrotationtogglebutton-pan,
	.panrotationtogglebutton[data-option="pan-rotate"] .panrotationtogglebutton-pan,
	.panrotationtogglebutton[data-option="rotate-pan"] .panrotationtogglebutton-rotate {
		transform: scale(0.8);
		transform-origin: top left;
		z-index: 20;
		opacity: 1;
	}
	.panrotationtogglebutton:not([data-option]) .panrotationtogglebutton-rotate,
	.panrotationtogglebutton[data-option="pan-rotate"] .panrotationtogglebutton-rotate,
	.panrotationtogglebutton[data-option="rotate-pan"] .panrotationtogglebutton-pan {
		transform: scale(0.5);
		transform-origin: bottom right;
		z-index: 1;
		opacity: 0.6;
	}
	.panrotationtogglebutton-tinyswapicon {
		color: white !important;
		z-index: 99999;
		transform-origin: top right;
		transform: scale(0.35) translate(-5px,5px);
	}
}

#viewsourcebox {
	max-width: var(--viewsourcebox-width);
	position: absolute;
	bottom: 0;
	right: 0;
	color: white;
	background-color: var(--boxbgcolor);
	padding: 2px;
	border: 1px solid white;
	border-radius: 4px;
	margin: 2px;
	line-height: 1;
	z-index: 1000000000;
	text-align: right;
	a {
		color: cyan;
		padding: 2px;
		margin: 2px;
		line-height: 1;
	}
	/* unvisited */   /* visited */
	a:link, a:visited {
		/* Just use the styles defined above */
	}
	/* pointer over */
	a:hover {
		color: yellow;
		font-weight: bold;
	}
	/* pointer down */
	a:active {
		color: red;
		font-weight: normal !important;
	}
}
