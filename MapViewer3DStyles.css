body {
	font-family: monospace;
	padding: 0;
	margin: 0;
	overflow: hidden;
	overflow: clip;
}
noscript {
	position: absolute;
	z-index: 9999999;
	color: white;
	background-color: black;
	height: 100dvh;
	width: 100dvw;
	font-size: min(100dvh, calc(100dvw / 30));
	line-height: 100dvh;
	text-align: center;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	inset: 0;
}

#fpscountercontainer
{
	z-index: 10000;
	position: absolute;
	top: 1lh;
	left: var(--infobox-width);
	background-color: var(--debuginfobgcolor);
	.fpscounter {
		fill: white;
		white-space: pre;
		dominant-baseline: hanging;
	}
	.fpschart {
		stroke: blue;
		stroke-width: 1;
		opacity: 0.9;
		fill: none;
	}
	.fpschartavg {
		stroke: red;
		stroke-width: 1;
		opacity: 0.3;
		fill: none;
	}
}

:root {
	--searchbox-inputheight: 2lh;
	--closebutton-padding: 1ex;
	--closebutton-font-scale: 1.2;
	--closebutton-size: calc(calc(1lh + 2 * var(--closebutton-padding)) * var(--closebutton-font-scale));
	--outlinesize-hover-scale: 2.5;
	--debuginfobgcolor: #111C;
	--boxbgcolor: #000E;
	--infobox-width: 20em;
	--viewsourcebox-width: 40ch;
	--viewsourcebox-height: 3lh;
	--viewsourcebox-border-width: 1px;
	--viewsourcebox-padding: 0.1em;
	--viewsourcebox-margin: 2px;
	--viewsourcebox-lineheight: 1;
	--viewsourcebox-full-height: calc(var(--viewsourcebox-height) + 2 * var(--viewsourcebox-border-width) + 2 * var(--viewsourcebox-padding) + 2 * var(--viewsourcebox-margin));
	--panrotationtogglebox-size: 48px;
	--panrotationtogglebox-border-width: 1px;
	--panrotationtogglebox-padding: 2px;
	--panrotationtogglebox-fake-margin: 2px;
	--panrotationtogglebox-full-size: calc(var(--panrotationtogglebox-size) + 2 * var(--panrotationtogglebox-padding) + 2 * var(--panrotationtogglebox-border-width) + 2 * var(--panrotationtogglebox-fake-margin));
}

#mapcontainer {
	transform-style: flat;
	overflow: hidden;
	overflow: clip;
	background-color: black;
	color: white;
	height: 100dvh;
	width: 100dvw;
	position: absolute;
	top: 0;
	left: 0;
	cursor: grab;
	user-select: none;
	
	& table, thead, tbody, tfoot, tr, th, td {
		border-color: white;
		padding-inline: 0.25em;
	}
	
	--shortcutlinkhue: 0deg;
	
	& hr {
		border: 1px solid white;
	}
}
#mapcontainer>*{
	position: absolute;
	cursor: auto;
	user-select: text;
}
#mapnodepanbox{
	transform-style: flat;
	cursor: grab;
	pointer-events: none;
	background: none;
	& *{
		/* TODO fix transitions? */
		/*transition-property: translate, scale;
		transition-duration: 0.2s;
		transition-timing-function: linear;*/
		-webkit-user-select: none;
		user-select: none;
		backface-visibility: visible;
	}
	#maplinks {
		z-index: 1 !important;
	}
	#mapnodes, #maplinks {
		translate: 50dvw 50dvh;
		height: 100dvh;
		width: 100dvw;
		transform-style: preserve-3d;
		transform-origin: top left;
		pointer-events: none;
		background: none;
		z-index: 10;
		position: absolute;
		top: 0;
		left: 0;
	}
	.mapnode {
		transform-style: flat;
		background-color: black;
		color: white;
		word-wrap: anywhere;
		position: absolute;
		top: 0;
		left: 0;
		transform-origin: center center;
		outline: var(--outlinesize) solid white;
		pointer-events: auto;
		pointer-events: all;
		cursor: pointer;
	}
	@keyframes waves{
		from {
			outline-style: solid;
			outline-width: calc(calc(var(--outlinesize-hover) + var(--outlinesize)) / 2);
		}
		to {
			outline-style: double;
			outline-width: calc(calc(var(--outlinesize-hover) + var(--outlinesize)) * 1.5);
		}
	}
	.nodebox.selected .mapnode{
		outline: calc(calc(var(--outlinesize-hover) + var(--outlinesize)) / 2) solid white;
		outline-width: calc(calc(var(--outlinesize-hover) * 0.6 + var(--outlinesize) * 0.4) * 1.5);
		outline-style: solid;
	}
	.mapnode:hover {
		outline: var(--outlinesize-hover) solid gold;
	}
	.nodebox.highlighted {
		outline: calc(var(--outlinesize-hover) + var(--outlinesize)) solid highlight;
	}
	.nodebox {
		transform-style: flat;
		position: absolute;
		height: 50px;
		width: 50px;
		overflow: visible;
		font-size: 15px;
		--outlinesize-hover: calc(var(--outlinesize) * var(--outlinesize-hover-scale));
	}
	.maplink {
		position: absolute;
		top: 0;
		left: 0;
		transform-style: preserve-3d;
	}
	.nomousebuttons .maplink{
		pointer-events: all;
		cursor: crosshair;
	}
	.maplink *{
		background-color: #7777;
		/*Note: links are semitransparent so you can see other links crossing and layered
				beneath the above links, and the opacity property doesn't do this*/
		position: absolute;
		top: 0;
		left: 0;
		transform-style: preserve-3d;
	}
	.mapnodeiconcontainer {
		position: absolute;
		top: 0;
		left: 55px;
		transform-origin: top left;
		image-rendering: pixelated;
		image-rendering: crisp-edges;
		display: flex;
		flex-direction: column;
		flex-wrap: wrap;
		line-height: 1;
		/* TODO ensure icons meet WCAG standards for color contrast; */
	}
	.nodeicon {
		display: block;
		height: 1lh;
		width: 1lh;
		color: white;
	}
	.maplink.selected * {
		background-color: white;
	}
	.maplink.mapshortcutlink * {
		background-color: hsla(var(--shortcutlinkhue), 100%, 30%, 45%);
	}
	.maplink.mapshortcutlink.selected * {
		background-color: hsla(var(--shortcutlinkhue), 100%, 50%, 100%);
	}
}

.animations {
	& .nodebox.selected .mapnode, .mapnode:focus{
		/*animation: 1s ease-in-out 0s alternate infinite waves;*/
		animation: 1s ease-in 0s infinite waves;
	}
}
#nodeinfobox {
	white-space: pre;
	z-index: 1000;
	background-color: var(--boxbgcolor);
	color: white;
	height: 100%;
	overflow: scroll;
	width: var(--infobox-width);
	font-size: 1em;
	top: var(--searchbox-inputheight);
	left: 0;
}
.closebutton {
	--closebutton-basecolor: red;
	font-size: calc(var(--closebutton-font-scale) * 1em);
	font-weight: bold;
	padding: var(--closebutton-padding);
	display: inline-block;
	color: white;
	text-decoration: none;
	/* border: 1px solid red;*/
	width: 1lh;
	text-align: center;
	background-color: color-mix(in srgb, var(--closebutton-basecolor), transparent 33.5%);
	opacity: 0.9;
	position: fixed;
	z-index: inherit;
}
.closebutton:hover {
	background-color: color-mix(in srgb, var(--closebutton-basecolor), transparent 13.5%);
}
.closebutton:active {
	background-color: color-mix(in srgb, color-mix(in srgb, var(--closebutton-basecolor), white 20%), transparent 13.5%);
}
.closebutton+* {
	padding-block-start: var(--closebutton-size);
}
.resultsboxlabel {
	padding-inline-start: calc(var(--closebutton-size) + 1ex);
	position: absolute;
}
#searchinputbox {
	line-height: var(--searchbox-inputheight);
	padding-inline: 3ex;
	background-color: #111C;
}
#searchbox {
	z-index: 99999;
	height: var(--searchbox-inputheight);
	.resultsboxcounttextlabel {
		margin-inline: 1ex;
	}
	.searchresults {
		white-space: pre-wrap;
		max-width: var(--infobox-width);
		width: max-content;
		width: 30em;
		overflow: auto;
		max-height: calc(100dvh - var(--searchbox-inputheight) - var(--closebutton-size));
		min-width: var(--infobox-width);
		background-color: var(--boxbgcolor);
		& a {
			text-decoration: none;
			color: white;
			display: block;
			font-size: larger;
			line-height: 2lh;
			padding: 0.75ex;
			border: 1px solid #222;
			margin: 0.25ex;
			& img {
				height: 1lh;
				vertical-align: top;
			}
			& span {
			}
		}
		& a:hover {
			background-color: #6666;
			border: 1px solid #888;
		}
		
		/*display: grid;
		grid-auto-rows: 1fr;
		grid-template-columns: 1fr;*/
	}
}
.hidden {
	display: none !important;
	visibility: hidden !important;
}
#maplegend {
	z-index: 100;
	background-color: var(--boxbgcolor);
	color: white;
	bottom: 0;
	left: 0;
	border: 1px solid white;
	padding: 2px;
}
#mapdebuginfo {
	z-index: 10000;
	background-color: var(--debuginfobgcolor);
	color: white;
	left: 0;
	right: 40ch;
	right: calc(36ch + 2ex + 10px);
	right: calc(36ch + 2ex + 6px + 2ch);
	top: var(--searchbox-inputheight);
}
@media (min-width: 1000px) {
	#mapdebuginfo, #maplegend, #searchbox {
		left: var(--infobox-width);
	}
	#nodeinfobox {
		top: 0;
	}
}

#mapdebuginfo:has(~#mapsettings.collapsed){
	right: 4ex;
	right: 2lh;
	right: calc(1lh + 2ex + 2px);
}
#mapdebuginfo:has(~#nodeinfobox.hidden){
	left: 0;
}
#nodeinfobox.hidden~#maplegend, #nodeinfobox.hidden~#searchbox{
	left: 0;
}
#mapsettings {
	z-index: 100000;
	top: 0;
	right: 0;
	text-align: center;
	background-color: var(--boxbgcolor);
	padding: 1ex;
	border: 1px solid white;
	line-height: var(--viewsourcebox-lineheight);
	max-height: calc(100% - var(--viewsourcebox-full-height));
	overflow: scroll;
	overflow: auto;
	box-sizing: border-box;
	& input {
		max-width: 19ch;
		padding-block: 1px;
		padding-inline: 2px;
		font-family: inherit;
		/*border-width: 2px;
		border-radius: 2px;*/
		margin: 0;
	}
}
#mapsettings.collapsed {
	height: 3ex;
	height: 1lh;
	width: 3ex;
	width: 1lh;
	overflow: hidden;
	overflow: clip;
	box-sizing: content-box !important;
}

#panrotationtogglebox {
	position: absolute;
	bottom: 0;
	right: 0;
	color: white;
	background-color: var(--boxbgcolor);
	border: var(--panrotationtogglebox-border-width) solid white;
	border-radius: 4px;
	line-height: 1;
	z-index: 100;
	text-align: right;
	height: var(--panrotationtogglebox-size);
	width: var(--panrotationtogglebox-size);
	top: calc(0px - var(--panrotationtogglebox-full-size) - var(--viewsourcebox-margin));
	margin: 0;
	padding: var(--panrotationtogglebox-padding);
	overflow: hidden;
	overflow: clip;
	* {
		padding: 0;
		margin: 0;
		height: inherit;
		width: inherit;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		transition-property: transform, transform-origin, z-index, opacity, font-weight;
		transition-duration: 0.1s;
		transition-timing-function: linear;
		color: #DDD;
	}
	.panrotationtogglebutton {
		margin: 1px;
		padding: 0;
		border: 1px solid currentColor;
		border-radius: 2px;
	}
	/* .panrotationtogglebutton>* {
		background-color: color-mix(in srgb, currentColor 35%, transparent);
	}*/
	.panrotationtogglebutton svg {
		& * {
			color: inherit;
			font-size: 12px;
		}
		& text {
			fill: black;
		}
	}
	.panrotationtogglebutton:hover:not([data-option]) .panrotationtogglebutton-pan,
	.panrotationtogglebutton:hover[data-option="pan-rotate"] .panrotationtogglebutton-pan,
	.panrotationtogglebutton:hover[data-option="rotate-pan"] .panrotationtogglebutton-rotate {
		transform: scale(0.85) translate(-1.2px, -1.2px);
		color: white;
	}
	.panrotationtogglebutton:not([data-option]) .panrotationtogglebutton-pan,
	.panrotationtogglebutton[data-option="pan-rotate"] .panrotationtogglebutton-pan,
	.panrotationtogglebutton[data-option="rotate-pan"] .panrotationtogglebutton-rotate {
		transform: scale(0.8);
		transform-origin: top left;
		z-index: 20;
		opacity: 1;
	}
	.panrotationtogglebutton:not([data-option]) .panrotationtogglebutton-rotate,
	.panrotationtogglebutton[data-option="pan-rotate"] .panrotationtogglebutton-rotate,
	.panrotationtogglebutton[data-option="rotate-pan"] .panrotationtogglebutton-pan {
		transform: scale(0.5);
		transform-origin: bottom right;
		z-index: 1;
		opacity: 0.6;
	}
	.panrotationtogglebutton-tinyswapicon {
		color: white !important;
		z-index: 99999;
		transform-origin: top right;
		transform: scale(0.35) translate(-5px,5px);
	}
}

#viewsourcebox {
	max-width: var(--viewsourcebox-width);
	height: var(--viewsourcebox-height);
	position: absolute;
	bottom: 0;
	right: 0;
	color: white;
	background-color: var(--boxbgcolor);
	padding: var(--viewsourcebox-padding);
	border: var(--viewsourcebox-border-width) solid white;
	border-radius: 4px;
	margin: var(--viewsourcebox-margin);
	line-height: var(--viewsourcebox-lineheight);
	z-index: 1000000000;
	text-align: right;
	a {
		color: cyan;
		padding: 2px;
		margin: 2px;
		line-height: 1;
	}
	/* unvisited */   /* visited */
	a:link, a:visited {
		/* Just use the styles defined above */
	}
	/* pointer over */
	a:hover {
		color: yellow;
		font-weight: bold;
	}
	/* pointer down */
	a:active {
		color: red;
		font-weight: normal !important;
	}
}
